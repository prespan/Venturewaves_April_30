"use strict";(()=>{var e={};e.id=738,e.ids=[738],e.modules={1649:e=>{e.exports=require("next-auth/react")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},4035:(e,r,t)=>{t.r(r),t.d(r,{config:()=>c,default:()=>l,routeModule:()=>P});var n={};t.r(n),t.d(n,{default:()=>d});var a=t(1802),i=t(7153),s=t(6249),o=t(1649),u=t(8438);async function d(e,r){let t=await (0,o.getSession)({req:e});if(!t||!t.user?.email)return r.status(401).json({error:"Unauthorized"});if("GET"!==e.method)return r.status(405).json({error:"Method not allowed"});try{let e=t.user.email,n=await u._.message.findMany({where:{OR:[{sender:e},{recipient:e}]},orderBy:{createdAt:"desc"}});r.status(200).json(n)}catch(e){console.error("Error fetching messages:",e),r.status(500).json({error:"Internal server error"})}}let l=(0,s.l)(n,"default"),c=(0,s.l)(n,"config"),P=new a.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/messaging/threads",pathname:"/api/messaging/threads",bundlePath:"",filename:""},userland:n})},8438:(e,r,t)=>{t.d(r,{_:()=>n});let n=new(require("@prisma/client")).PrismaClient},7153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,r,t)=>{e.exports=t(145)}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=r(r.s=4035);module.exports=t})();